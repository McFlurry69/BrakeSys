#include <math.h>
#include <stdint.h>

/*
*   –ó–Ω–∞—á–µ–Ω–∏—è –ª–∏–Ω–≥–≤–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö "–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ", "–≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ"
*/

#define fVLN -125  //–û—á–µ–Ω—å –±–æ–ª—å—à–æ–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ
#define fLN -90    //–ë–æ–ª—å—à–æ–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ
#define fMN -55    //–°—Ä–µ–¥–Ω–µ–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ
#define fSN -20    //–ú–∞–ª–æ–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ
#define fNO 0      //–ù—É–ª–µ–≤–æ–µ
#define fSP 20     //–ú–∞–ª–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ
#define fMP 55     //–°—Ä–µ–¥–Ω–µ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ
#define fLP 90     //–ë–æ–ª—å—à–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ
#define fVLP 125   //–û—á–µ–Ω—å —Å–∏–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ

#define MIN(X, Y) (((X) < (Y)) ? (X) : (Y))
#define MAX(X, Y) (((X) > (Y)) ? (X) : (Y))

typedef enum {
    AND,
    OR
} op_type;

uint8_t numofrules;

struct rule {
    int16_t fe;
    op_type op;
    int16_t fde;
    int16_t z;
};
struct rule rules[12];
/*
@brief –°—Ç–µ–ø–µ–Ω—å –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏ ¬µùî∏(x) –≤ –∫–∞–∫–æ–π —Å—Ç–µ–ø–µ–Ω–∏ (–º–µ—Ä–µ) —ç–ª–µ–º–µ–Ω—Ç x –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –Ω–µ—á—ë—Ç–∫–æ–º—É –º–Ω–æ–∂–µ—Å—Ç–≤—É ùî∏.

\param[in] —Ö –≠–ª–µ–º–µ–Ω—Ç –∏–∑ –•
\param[in] A –ù–µ—á–µ—Ç–∫–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ ùî∏
\return –ú–µ—Ä–∞ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏
*/
double mu(int16_t x, int16_t A);

/*
@brief –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∫ —Ä–µ–≥—É–ª—è—Ç–æ—Ä—É

\param[in] ife –∑–Ω–∞—á–µ–Ω–∏–µ –ª–∏–Ω–≥–≤–∏—Å—Ç–∏—á–µ—Å–∫–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π "–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ" –¥–ª—è –æ—à–∏–±–∫–∏
\param[in] op –æ–ø–µ—Ä–∞—Ç–æ—Ä –ò / –ò–õ–ò
\param[in] deltae –∑–Ω–∞—á–µ–Ω–∏–µ –ª–∏–Ω–≥–≤–∏—Å—Ç–∏—á–µ—Å–∫–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π "–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ" –ø–µ—Ä–≤–æ–π —Ä–∞–∑–Ω–æ—Å—Ç–∏ –æ—à–∏–±–∫–∏
\param[in] then –∑–Ω–∞—á–µ–Ω–∏–µ –ª–∏–Ω–≥–≤–∏—Å—Ç–∏—á–µ—Å–∫–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π "–≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ"
*/
void addrule(int16_t fe, op_type op, int16_t fde, int16_t z);

/*
@brief –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ—á–µ—Ç–∫–æ–≥–æ —Ä–µ–≥—É–ª—è—Ç–æ—Ä–∞ —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–∞–≤–∏–ª

\param[in] e —Ç–µ–∫—É—â–∞—è –æ—à–∏–±–∫–∞
\param[in] de –ø–µ—Ä–≤–∞—è —Ä–∞–∑–Ω–∏—Ü–∞ –æ—à–∏–±–æ–∫
\return –£–ø—Ä–∞–≤–ª—è—é—â–µ–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ
*/
double getFuzzyConclusion(int16_t e, int16_t de);
/**
 * @brief –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ—á–µ—Ç–∫–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª
 *
 */
void Fuzzy_Init();
